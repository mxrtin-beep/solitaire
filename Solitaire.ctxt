#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment0.text=\n\ Main\ method\n\ @param\ args\ main\ method\n
comment1.params=
comment1.target=Solitaire()
comment1.text=\n\ Sets\ up\ solitaire\ game\n
comment10.params=index
comment10.target=Pile\ getPile(int)
comment10.text=precondition\:\ \ 0\ <\=\ index\ <\ 7\n\ postcondition\:\ returns\ a\ reference\ to\ the\ given\ pile\n\ @param\ index\ index\ of\ pile\n\ @return\ pile\ at\ said\ index\n
comment11.params=
comment11.target=void\ createStock()
comment11.text=\n\ Creates\ randomized\ pile\ of\ cards\n
comment12.params=
comment12.target=void\ deal()
comment12.text=\n\ Deals\ cards\ to\ piles\n
comment13.params=
comment13.target=void\ dealThreeCards()
comment13.text=\n\ Deals\ three\ cards\ to\ waste,\ facing\ up\n
comment14.params=
comment14.target=void\ resetStock()
comment14.text=\n\ Moves\ all\ cards\ from\ waste\ to\ stock,\ facing\ down\n
comment15.params=
comment15.target=void\ stockClicked()
comment15.text=\n\ called\ when\ the\ stock\ is\ clicked\n
comment16.params=
comment16.target=void\ wasteClicked()
comment16.text=\n\ called\ when\ the\ waste\ is\ clicked\n\ \n
comment17.params=index
comment17.target=void\ foundationClicked(int)
comment17.text=\n\ Performs\ actions\ when\ foundation\ is\ clicked\n\ @param\ index\ index\ of\ foundation\n
comment18.params=index\ offset
comment18.target=void\ pileClicked(int,\ double)
comment18.text=\n\ Called\ when\ given\ pile\ is\ clicked\n\ @param\ index\ index\ of\ clicked\ pile\n\ @param\ offset\ Y\ value\ of\ mouse\ click\n
comment19.params=card\ index
comment19.target=boolean\ canAddToPile(Card,\ int)
comment19.text=\n\ Checks\ if\ given\ card\ can\ be\ moved\ to\ given\ pile\n\ @param\ card\ given\ card\n\ @param\ index\ index\ of\ pile\n\ @return\ true\ if\ card\ can\ be\ moved\n
comment2.params=
comment2.target=Card\ getStockCard()
comment2.text=\n\ returns\ the\ card\ on\ top\ of\ the\ stock,\n\ or\ null\ if\ the\ stock\ is\ empty\n\ @return\ top\ of\ stock\n
comment20.params=index\ num
comment20.target=java.util.Stack\ removeFaceUpCards(int,\ int)
comment20.text=\n\ Removes\ some\ the\ face\ up\ cards\ in\ a\ given\ pile\n\ @param\ index\ index\ of\ the\ pile\n\ @param\ num\ number\ of\ cards\ to\ move\n\ @return\ stack\ of\ face\ up\ cards\n
comment21.params=cards\ index
comment21.target=void\ addToPile(java.util.Stack,\ int)
comment21.text=\n\ Adds\ given\ stack\ of\ cards\ to\ given\ pile\n\ @param\ cards\ stack\ of\ cards\ to\ add\n\ @param\ index\ index\ of\ pile\n
comment22.params=card\ index
comment22.target=boolean\ canAddToFoundation(Card,\ int)
comment22.text=\n\ Tests\ if\ given\ card\ can\ be\ moved\ to\ given\ foundation\n\ @param\ card\ given\ card\n\ @param\ index\ index\ of\ foundation\n\ @return\ true\ if\ card\ can\ be\ moved\n
comment23.params=
comment23.target=boolean\ checkIfWon()
comment23.text=\n\ Checks\ if\ player\ has\ won\n\ @return\ true\ if\ player\ has\ won\n
comment24.params=
comment24.target=void\ help()
comment24.text=\n\ Automatically\ makes\ legal\ foundation\ moves\n
comment25.params=
comment25.target=void\ undo()
comment25.text=\n\ Undoes\ a\ move\n
comment26.params=index\ offset
comment26.target=int\ calcSelectedCards(int,\ double)
comment26.text=\n\ Calculates\ the\ number\ of\ selected\ cards\ from\ the\ bottom\ of\ the\ stack\ \n\ only\ works\ when\ clicking\ on\ face\ up\ cards\n\ @param\ index\ index\ of\ pile\n\ @param\ offset\ y\ value\ of\ click\n\ @return\ number\ of\ selected\ cards\ from\ the\ bottom\ of\ the\ stack,\ including\ down-facing\ cards\n
comment3.params=
comment3.target=int\ score()
comment3.text=\n\ Returns\ score\n\ @return\ score\n
comment4.params=
comment4.target=javax.sound.sampled.Clip\ clip()
comment4.text=\n\ Returns\ clip\n\ @return\ clip\n
comment5.params=
comment5.target=Card\ getWasteCard()
comment5.text=\n\ returns\ the\ card\ on\ top\ of\ the\ waste,\n\ or\ null\ if\ the\ waste\ is\ empty\n\ @return\ top\ of\ waste\n
comment6.params=index\ num
comment6.target=void\ addFaceUp(int,\ int)
comment6.text=\n\ Changes\ the\ number\ of\ face\ up\ cards\ of\ a\ given\ pile\n\ @param\ index\ index\ of\ pile\n\ @param\ num\ number\ to\ add\ \n
comment7.params=index\ num
comment7.target=void\ addFaceDown(int,\ int)
comment7.text=\n\ Changes\ the\ number\ of\ face\ down\ cards\ of\ a\ given\ pile\n\ @param\ index\ index\ of\ pile\n\ @param\ num\ number\ to\ add\n\ \n
comment8.params=
comment8.target=Card[]\ getWasteArray()
comment8.text=\n\ returns\ the\ top\ three\ cards\ on\ the\ waste\n\ or\ null\ if\ the\ waste\ is\ empty\n\ @return\ top\ 3\ cards\ of\ waste\ backwards\n
comment9.params=index
comment9.target=Card\ getFoundationCard(int)
comment9.text=\n\ \ \ \ precondition\:\ \ 0\ <\=\ index\ <\ 4\n\ \ \ \ postcondition\:\ returns\ the\ card\ on\ top\ of\ the\ given\n\ \ \ \ foundation,\ or\ null\ if\ the\ foundation\n\ \ \ \ is\ empty\n\ \ \ \ @param\ index\ index\ of\ foundation\ to\ get\n\ \ \ \ @return\ card\ at\ the\ top\ of\ that\ foundation\n
numComments=27
